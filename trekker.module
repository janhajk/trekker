<?php


/**
 * Implements hook_block_info().
 */
function trekker_block_info() {
  $blocks['addToMyGear']['info'] = t('Add an item to your gear');
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function trekker_block_view($delta='') {
    $block = array();
    switch($delta) {
        case 'addToMyGear' :
        // TODO: If already in my gear, then display "I own this..."
        $block['content'] = drupal_get_form('trekker_addToMyGear_form');
        break;
    }

    return $block;
}

function trekker_addToMyGear_form($form_state) {
    $form['nid'] = array(
        '#type' => 'hidden',
        '#value' => arg(1)
    );
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Add to my gear'),
    );
    return $form;
}

function trekker_addToMyGear_form_submit($form, &$form_state) {
    $nid = $form_state['values']['nid'];
    //$node = node_load($nid);
    if (user_access('create my_gear content')) {
        drupal_set_message('Please fill out form below to add item to your gear', 'status');
    }
    else {
        drupal_set_message('Please create account or login to create your own gear list', 'warning');
    }
    $form_state['redirect'] = 'node/add/my-gear/'.$nid;
}


function trekker_form_alter(&$form, $form_state, $form_id) {
  // Check for a particular content type's node form. Form name is [content_type_name]_node_form
  if ($form_id == 'my_gear_node_form') {
    // Add an after_build function to process when everything's complete.
    $form['#after_build'][] = 'trekker_after_build';
  }
}


/**
 * Populate node reference field
 */
function trekker_after_build($form, &$form_state) {
    if (arg(3)!==NULL) {
        $node = node_load(arg(3));
        $form['field_item']['und'][0]['target_id']['#value'] = $node->title.' ('.$node->nid.')';
    }
    return $form;
}